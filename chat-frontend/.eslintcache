[{"/home/nithin/Asha/chat-app/chat-frontend/src/index.js":"1","/home/nithin/Asha/chat-app/chat-frontend/src/App.js":"2","/home/nithin/Asha/chat-app/chat-frontend/src/reportWebVitals.js":"3","/home/nithin/Asha/chat-app/chat-frontend/src/components/Auth/Login.js":"4","/home/nithin/Asha/chat-app/chat-frontend/src/components/Auth/Register.js":"5","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/Chat.js":"6","/home/nithin/Asha/chat-app/chat-frontend/src/services/authService.js":"7","/home/nithin/Asha/chat-app/chat-frontend/src/services/api.js":"8","/home/nithin/Asha/chat-app/chat-frontend/src/store/index.js":"9","/home/nithin/Asha/chat-app/chat-frontend/src/store/reducers/index.js":"10","/home/nithin/Asha/chat-app/chat-frontend/src/store/reducers/auth.js":"11","/home/nithin/Asha/chat-app/chat-frontend/src/store/actions/auth.js":"12","/home/nithin/Asha/chat-app/chat-frontend/src/components/Router/ProtectedRoute.js":"13","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Navbar/Navbar.js":"14","/home/nithin/Asha/chat-app/chat-frontend/src/components/Modal/Modal.js":"15","/home/nithin/Asha/chat-app/chat-frontend/src/store/types/index.js":"16","/home/nithin/Asha/chat-app/chat-frontend/src/store/actions/chat.js":"17","/home/nithin/Asha/chat-app/chat-frontend/src/services/chatService.js":"18","/home/nithin/Asha/chat-app/chat-frontend/src/store/reducers/chat.js":"19","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/FriendList/FriendList.js":"20","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Messenger/Messenger.js":"21","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Friend/Friend.js":"22","/home/nithin/Asha/chat-app/chat-frontend/src/utils/helpers.js":"23","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/ChatHeader/ChatHeader.js":"24","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/MessageBox/MessageBox.js":"25","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/MessageInput/MessageInput.js":"26","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Message/Message.js":"27","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/hooks/socketConnect.js":"28"},{"size":619,"mtime":1609764384135,"results":"29","hashOfConfig":"30"},{"size":1127,"mtime":1609839035907,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1609702876064,"results":"32","hashOfConfig":"30"},{"size":1683,"mtime":1610976156918,"results":"33","hashOfConfig":"30"},{"size":2853,"mtime":1609768978508,"results":"34","hashOfConfig":"30"},{"size":656,"mtime":1610373419861,"results":"35","hashOfConfig":"30"},{"size":1296,"mtime":1609937602605,"results":"36","hashOfConfig":"30"},{"size":644,"mtime":1609944229140,"results":"37","hashOfConfig":"30"},{"size":207,"mtime":1609764177590,"results":"38","hashOfConfig":"30"},{"size":171,"mtime":1610050141478,"results":"39","hashOfConfig":"30"},{"size":988,"mtime":1610366880312,"results":"40","hashOfConfig":"30"},{"size":901,"mtime":1609944593247,"results":"41","hashOfConfig":"30"},{"size":465,"mtime":1609770510789,"results":"42","hashOfConfig":"30"},{"size":4284,"mtime":1609937354878,"results":"43","hashOfConfig":"30"},{"size":919,"mtime":1610376523756,"results":"44","hashOfConfig":"30"},{"size":141,"mtime":1609944555919,"results":"45","hashOfConfig":"30"},{"size":2906,"mtime":1610635319188,"results":"46","hashOfConfig":"30"},{"size":1819,"mtime":1610631193691,"results":"47","hashOfConfig":"30"},{"size":7494,"mtime":1610632240542,"results":"48","hashOfConfig":"30"},{"size":2509,"mtime":1610606247322,"results":"49","hashOfConfig":"30"},{"size":787,"mtime":1610188895868,"results":"50","hashOfConfig":"30"},{"size":1116,"mtime":1610109132136,"results":"51","hashOfConfig":"30"},{"size":96,"mtime":1610367252894,"results":"52","hashOfConfig":"30"},{"size":4071,"mtime":1610705604770,"results":"53","hashOfConfig":"30"},{"size":2755,"mtime":1610535428510,"results":"54","hashOfConfig":"30"},{"size":5304,"mtime":1610607968905,"results":"55","hashOfConfig":"30"},{"size":880,"mtime":1610193639846,"results":"56","hashOfConfig":"30"},{"size":1744,"mtime":1610632332059,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"gbsdqj",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"60"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},"/home/nithin/Asha/chat-app/chat-frontend/src/index.js",[],["120","121"],"/home/nithin/Asha/chat-app/chat-frontend/src/App.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/reportWebVitals.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Auth/Login.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Auth/Register.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/Chat.js",["122"],"import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport useSocket from './hooks/socketConnect'\nimport Navbar from './components/Navbar/Navbar'\nimport FriendList from './components/FriendList/FriendList'\nimport Messenger from './components/Messenger/Messenger'\n\nimport './chat.scss'\n\nconst Chat = () => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.authReducer.user)\n\n  useSocket(user, dispatch)\n\n  return (\n    <div id=\"chat-container\">\n      <Navbar />\n      <div id=\"chat-wrap\">\n        <FriendList />\n        <Messenger />\n      </div>\n    </div>\n  );\n}\n\nexport default Chat","/home/nithin/Asha/chat-app/chat-frontend/src/services/authService.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/services/api.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/store/index.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/store/reducers/index.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/store/reducers/auth.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/store/actions/auth.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Router/ProtectedRoute.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Navbar/Navbar.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Modal/Modal.js",["123"],"import React from 'react'\nimport './Modal.scss'\n\nconst Modal = (props) => {\n\n  const findByKey = (name) =>\n    props.children.map(child => {\n      if (child.key === name) return child\n    })\n\n  const closeModal = (e) => {\n    e.stopPropagation()\n\n    if (e.target.classList.contains('modal-close')) {\n      return props.click()\n    }\n  }\n\n  return (\n    <div className='modal-mask modal-close' onClick={closeModal}>\n      <div className='modal-wrapper'>\n        <div className='modal-container'>\n\n          <div className='modal-header'>\n            {findByKey('header')}\n          </div>\n\n          <div className='modal-body'>\n            {findByKey('body')}\n          </div>\n\n          <div className='modal-footer'>\n            <button className='modal-close' onClick={closeModal}>CLOSE</button>\n            {findByKey('footer')}\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Modal","/home/nithin/Asha/chat-app/chat-frontend/src/store/types/index.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/store/actions/chat.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/services/chatService.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/store/reducers/chat.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/FriendList/FriendList.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Messenger/Messenger.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Friend/Friend.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/utils/helpers.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/ChatHeader/ChatHeader.js",["124","125","126","127"],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/MessageBox/MessageBox.js",["128"],"import React, { useRef, useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport Message from '../Message/Message'\nimport { paginateMessages } from '../../../../store/actions/chat'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport './MessageBox.scss'\n\nconst MessageBox = ({ chat }) => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.authReducer.user)\n  const scrollBottom = useSelector(state => state.chatReducer.scrollBottom)\n  const senderTyping = useSelector(state => state.chatReducer.senderTyping)\n  const [loading, setLoading] = useState(false)\n  const [scrollUp, setScrollUp] = useState(0)\n\n  const msgBox = useRef()\n\n\n  const scrollManual = (value) => {\n    msgBox.current.scrollTop = value\n  }\n\n  const handleInfiniteScroll = (e) => {\n    if (e.target.scrollTop === 0) {\n      setLoading(true)\n      const pagination = chat.Pagination\n      const page = typeof pagination === 'undefined' ? 1 : pagination.page\n      // dispatch\n      dispatch(paginateMessages(chat.id, parseInt(page) + 1))\n        .then(res => {\n          if (res) {\n            setScrollUp(scrollUp + 1)\n          }\n          setLoading(false)\n        })\n        .catch(err => {\n          setLoading(false)\n        })\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      scrollManual(Math.ceil(msgBox.current.scrollHeight * 0.10))\n    }, 100)\n  }, [scrollUp])\n\n  useEffect(() => {\n    if (senderTyping.typing && msgBox.current.scrollTop > msgBox.current.scrollHeight * 0.30) {\n      setTimeout(() => {\n        scrollManual(Math.ceil(msgBox.current.scrollHeight * 0.10))\n      }, 100)\n    }\n  }, [senderTyping])\n\n  useEffect(() => {\n    if (!senderTyping.typing) {\n      setTimeout(() => {\n        scrollManual(msgBox.current.scrollHeight)\n      }, 100)\n    }\n  }, [scrollBottom])\n\n  return (\n    <div onScroll={handleInfiniteScroll} id='msg-box' ref={msgBox}>\n      {\n        loading\n          ? <p className='loader m-0'>\n            <FontAwesomeIcon\n              icon='spinner'\n              className='fa-spin'\n            />\n          </p>\n          : null\n      }\n      {\n        chat.Messages.map((message, index) => {\n          return <Message\n            user={user}\n            chat={chat}\n            message={message}\n            index={index}\n            key={message.id}\n          />\n        })\n      }\n      {\n        senderTyping.typing && senderTyping.chatId === chat.id\n          ? <div className='message'>\n            <div className='other-person'>\n              <p className='m-0'>{senderTyping.fromUser.firstName} {senderTyping.fromUser.lastName}...</p>\n            </div>\n          </div>\n          : null\n      }\n    </div>\n  )\n}\nexport default MessageBox","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/MessageInput/MessageInput.js",["129"],"import React, { useState, useRef, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport ChatService from '../../../../services/chatService'\nimport { incrementScroll } from '../../../../store/actions/chat'\nimport { Picker } from 'emoji-mart'\nimport 'emoji-mart/css/emoji-mart.css'\nimport './MessageInput.scss'\n\nconst MessageInput = ({ chat }) => {\n\n  const dispatch = useDispatch()\n  const user = useSelector(state => state.authReducer.user)\n  const socket = useSelector(state => state.chatReducer.socket)\n  const newMessage = useSelector(state => state.chatReducer.newMessage)\n\n  const fileUpload = useRef()\n  const msgInput = useRef()\n\n  const [message, setMessage] = useState('')\n  const [image, setImage] = useState('')\n  const [showEmojiPicker, setShowEmojiPicker] = useState(false)\n  const [showNewMessageNotification, setShowNewMessageNotification] = useState(false)\n\n  const handleMessage = (e) => {\n    const value = e.target.value\n    setMessage(value)\n\n    // notify other users that this user is typing something\n    const receiver = {\n      chatId: chat.id,\n      fromUser: user,\n      toUserId: chat.Users.map(user => user.id)\n    }\n    if (value.length === 1) {\n      receiver.typing = true\n      socket.emit('typing', receiver)\n    }\n\n    if (value.length === 0) {\n      receiver.typing = false\n      socket.emit('typing', receiver)\n    }\n  }\n\n  const handleKeyDown = (e, imageUpload) => {\n    if (e.key === 'Enter') sendMessage(imageUpload)\n  }\n\n  const sendMessage = (imageUpload) => {\n    if (message.length < 1 && !imageUpload) return\n\n    const msg = {\n      type: imageUpload ? 'image' : 'text',\n      fromUser: user,\n      toUserId: chat.Users.map(user => user.id),\n      chatId: chat.id,\n      message: imageUpload ? imageUpload : message\n    }\n\n    setMessage('')\n    setImage('')\n    setShowEmojiPicker(false)\n    // send message with socket\n    socket.emit('message', msg)\n  }\n\n  const handleImaageUpload = () => {\n    const formData = new FormData()\n    formData.append('id', chat.id)\n    formData.append('image', image)\n\n    // chat service\n    ChatService.uploadImage(formData)\n      .then(image => {\n        sendMessage(image)\n      })\n      .catch(err => console.log(err))\n  }\n\n  const selectEmoji = (emoji) => {\n    const startPosition = msgInput.current.selectionStart\n    const endPosition = msgInput.current.selectionEnd\n    const emojiLength = emoji.native.length\n    const value = msgInput.current.value\n    setMessage(value.substring(0, startPosition) + emoji.native + value.substring(endPosition, value.length))\n    msgInput.current.focus()\n    msgInput.current.selectionEnd = endPosition + emojiLength\n\n  }\n\n  useEffect(() => {\n    const msgBox = document.getElementById('msg-box')\n    if (!newMessage.seen && newMessage.chatId === chat.id && msgBox.scrollHeight !== msgBox.clientHeight) {\n      if (msgBox.scrollTop > msgBox.scrollHeight * 0.30) {\n        dispatch(incrementScroll())\n      } else {\n        setShowNewMessageNotification(true)\n      }\n    } else {\n      setShowNewMessageNotification(false)\n    }\n  }, [newMessage, dispatch])\n\n  const showNewMessage = () => {\n    dispatch(incrementScroll())\n    setShowNewMessageNotification(false)\n  }\n\n  return (\n    <div id='input-container'>\n      <div id='image-upload-container'>\n        <div>\n          {\n            showNewMessageNotification\n              ? <div id='message-notification' onClick={showNewMessage}>\n                <FontAwesomeIcon icon='bell' className='fa-icon' />\n                <p className='m-0'>new message</p>\n              </div>\n              : null\n          }\n        </div>\n        <div id='image-upload'>\n          {\n            image.name ?\n              <div id='image-details'>\n                <p className='m-0'>{image.name}</p>\n                <FontAwesomeIcon\n                  onClick={handleImaageUpload}\n                  icon='upload'\n                  className='fa-icon'\n                />\n                <FontAwesomeIcon\n                  onClick={() => setImage('')}\n                  icon='times'\n                  className='fa-icon'\n                />\n              </div>\n              : null\n          }\n          <FontAwesomeIcon\n            onClick={() => fileUpload.current.click()}\n            icon={['far', 'image']}\n            className='fa-icon'\n          />\n        </div>\n      </div>\n      <div id='message-input'>\n        <input\n          ref={msgInput}\n          value={message}\n          type='text'\n          placeholder='Message...'\n          onChange={e => handleMessage(e)}\n          onKeyDown={e => handleKeyDown(e, false)}\n        />\n        <FontAwesomeIcon\n          onClick={() => setShowEmojiPicker(!showEmojiPicker)}\n          icon={['far', 'smile']}\n          className='fa-icon'\n        />\n      </div>\n      <input id='chat-image' ref={fileUpload} type='file' onChange={(e) => setImage(e.target.files[0])}></input>\n      {\n        showEmojiPicker\n          ? <Picker\n            title='Pick your emoji..'\n            emoji='point-up'\n            style={{ position: 'absolute', bottom: '20px', right: '20px' }}\n            onSelect={selectEmoji}\n          />\n          : null\n      }\n    </div>\n  )\n}\n\nexport default MessageInput","/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/components/Message/Message.js",[],"/home/nithin/Asha/chat-app/chat-frontend/src/components/Chat/hooks/socketConnect.js",["130"],"import { useEffect } from 'react'\nimport socketIOClient from 'socket.io-client'\nimport {\n  fetchChats,\n  onlineFriends,\n  onlineFriend,\n  offlineFriend,\n  setSocket,\n  receivedMessage,\n  senderTyping,\n  createChat,\n  addUserToGroup,\n  leaveCurrentChat,\n  deleteCurrentChat\n} from '../../../store/actions/chat'\n\nfunction useSocket(user, dispatch) {\n\n  useEffect(() => {\n\n    dispatch(fetchChats())\n      .then(res => {\n\n        const socket = socketIOClient.connect('http://127.0.0.1:3000')\n\n        dispatch(setSocket(socket))\n\n        socket.emit('join', user)\n\n        socket.on('typing', (sender) => {\n          dispatch(senderTyping(sender))\n        })\n\n        socket.on('friends', (friends) => {\n          console.log('Friends', friends)\n          dispatch(onlineFriends(friends))\n        })\n\n        socket.on('online', (user) => {\n          console.log('Online', user)\n          dispatch(onlineFriend(user))\n        })\n\n        socket.on('offline', (user) => {\n          console.log('Offline', user)\n          dispatch(offlineFriend(user))\n        })\n\n        socket.on('received', (message) => {\n          dispatch(receivedMessage(message, user.id))\n        })\n\n        socket.on('new-chat', (chat) => {\n          dispatch(createChat(chat))\n        })\n\n        socket.on('added-user-to-group', (group) => {\n          dispatch(addUserToGroup(group))\n        })\n\n        socket.on('remove-user-from-chat', (data) => {\n          data.currentUserId = user.id\n          dispatch(leaveCurrentChat(data))\n        })\n\n        socket.on('delete-chat', (chatId) => {\n          dispatch(deleteCurrentChat(chatId))\n        })\n\n        console.log(res)\n      })\n      .catch(err => console.log(err))\n\n\n\n\n  }, [dispatch])\n}\n\nexport default useSocket",{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":17,"nodeType":"137","messageId":"138","endLine":1,"endColumn":26},{"ruleId":"139","severity":1,"message":"140","line":7,"column":30,"nodeType":"141","messageId":"142","endLine":7,"endColumn":32},{"ruleId":"135","severity":1,"message":"143","line":14,"column":10,"nodeType":"137","messageId":"138","endLine":14,"endColumn":28},{"ruleId":"135","severity":1,"message":"144","line":14,"column":30,"nodeType":"137","messageId":"138","endLine":14,"endColumn":51},{"ruleId":"135","severity":1,"message":"145","line":15,"column":10,"nodeType":"137","messageId":"138","endLine":15,"endColumn":29},{"ruleId":"135","severity":1,"message":"146","line":15,"column":31,"nodeType":"137","messageId":"138","endLine":15,"endColumn":53},{"ruleId":"147","severity":1,"message":"148","line":63,"column":6,"nodeType":"149","endLine":63,"endColumn":20,"suggestions":"150"},{"ruleId":"147","severity":1,"message":"151","line":103,"column":6,"nodeType":"149","endLine":103,"endColumn":28,"suggestions":"152"},{"ruleId":"147","severity":1,"message":"153","line":77,"column":6,"nodeType":"149","endLine":77,"endColumn":16,"suggestions":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'showLeaveChatModal' is assigned a value but never used.","'setShowLeaveChatModal' is assigned a value but never used.","'showDeleteChatModal' is assigned a value but never used.","'setShowDeleteChatModal' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'senderTyping.typing'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'chat.id'. Either include it or remove the dependency array.",["158"],"React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.",["159"],"no-global-assign","no-unsafe-negation",{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [scrollBottom, senderTyping.typing]",{"range":"166","text":"167"},"Update the dependencies array to be: [newMessage, dispatch, chat.id]",{"range":"168","text":"169"},"Update the dependencies array to be: [dispatch, user]",{"range":"170","text":"171"},[1840,1854],"[scrollBottom, senderTyping.typing]",[3157,3179],"[newMessage, dispatch, chat.id]",[1705,1715],"[dispatch, user]"]